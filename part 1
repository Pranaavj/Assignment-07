public class MergeSort
{
	void mergeArray(int arr[], int l, int m, int r)
	{
		int nums1 = m - l + 1;
		int nums2 = r - m;
		int Left[] = new int [nums1];
		int Right[] = new int [nums2];
		for (int i=0; i<nums1; ++i)
			Left[i] = arr[l + i];
		for (int j=0; j<nums2; ++j)
			Right[j] = arr[m + 1+ j];
		int i = 0, j = 0;
		int k = l;
		while (i < nums1 && j < nums2)
		{
			if (Left[i] <= Right[j])
			{
				arr[k] = Left[i];
				i++;
			}
			else
			{
				arr[k] = Right[j];
				j++;
			}
			k++;
		}
		while (i < n1)
		{
			arr[k] = Left[i];
			i++;
			k++;
		}
		while (j < n2)
		{
			arr[k] = Right[j];
			j++;
			k++;
		}
	}
	void sorting(int arr[], int left, int right)
	{
		if (left < right)
		{
			int m = (left+right)/2;
			sorting(arr, left, m);
			sorting(arr , m+1, right);
			mergeArray(arr, left, m, right);
		}
	}
	static void printArray(int nums[])
	{
		int n = nums.length;
		for (int i=0; i<n; ++i)
			System.out.print(nums[i] + " ");
		System.out.println();
	}
	public static void main(String args[])
	{
		int nums[] = {12, 11, 13, 5, 6, 7};
		System.out.println("Given Array");
		printArray(nums);
		MergeSort ob = new MergeSort();
		ob.sorting(nums, 0, nums.length-1);
		System.out.println("\nSorted array");
		printArray(nums);
	}
}
